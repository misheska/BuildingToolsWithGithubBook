[[repo-admin]]
== Repository Administration

Anyone who creates a repository will eventually have to configure
them.  This chapter covers some of the common tasks you'll encounter
as a repository administrator.

image::images/repo-admin-link.png[]

=== Basic Administration

image::images/repo-admin-options.png[]

==== Selecting a Set of Features: Wikis and Issues

Github provides a simple Wiki interface based on a projct called
Gollum.    Discuss how sometimes it doesn't make sense to have a Wiki
for every single project.  Also discuss the option of making your Wiki
open to the public or only to repository collaborators.

Everyone has issues, and if you'd like to track them for a repository,
you can turn this feature on here.

==== Renaming a Repository (if you must)

Renaming a repository is generally a very bad idea.   When you rename
a repository you break the existing URLs people have used to clone a
repository and you are bound to confuse and upset anyone who depends
on your repository.

==== "master" just doesn't feel right

Think about the consequences of changing the default branch before you
just do this.  Again, you are changing your repository to present a
different interface than the standard.

=== The Danger Zone

image::images/repo-admin-danger.png[]

The Danger Zone is just that - dangerous.   Here you can delete a project, give it away, or expose your code to the public.   Github understands the risk, and because of this every action in the Danger Zone requires explicit authorization and confirmation.

==== Making a Repository Public

Be careful, do you really want to do that?

==== How to Transfer Repository Ownership

Maybe you started out with a personal account and you want to transfer ownership or a repository to an organization?   Or, maybe you are just sick of a project and want to pass responsibility to someone else?

==== Deleting a Repository

If your project angers you, delete it.

=== Managing Access to an Individual Repository

image::images/repo-admin-collaborators.png[]

==== Teams vs. Individuals: What's Appropriate

Discuss some of the decision process here.   When should somone use
organization teams versus just granting individuals access to
repositories.

==== Strategies for Managing Collaborators

===== How to manage access to Open Source Projects

Provide some guidance for people managing Open Source projects.

===== How to manage access during Corporate Development

Provide some guideance for people manging corporate projects.

=== Robots with Keys: Deploy Keys

image::images/repo-admin-deploy-key.png[]

Discuss the idea that not every "user" of a repository has an
identity.   Continuous Integration systems, Puppet, Chef, CFEngine -
all of these systems may need to access a Github repository

==== Should you use Deploy Keys or Role Accounts?

==== Limitations on Deploy Keys

=== Repository Service Hooks

image::images/repo-admin-service-hooks.png[]

Explain them all, do it...

==== Simple Integration, REST, HTTP

* WebHook URLs (0)

===== With Webhooks, the Possibilities are Endless

Talk about how you could use Webhooks to write your own integrations.

===== Integration Possibilities

Create an idea list here.

==== Project Management Tools

* ActiveCollab - http://www.activecollab.com/
* Acunote - http://www.acunote.com/
* AgileBench - http://www.agilebench.com/
* AgileZen - http://www.agilezen.com
* Backlog - http://backlogtool.com/
* BasecampClassic
* Basecamp
* ScrumDo
* Trello - https://trello.com/
* ZohoProjects

===== Keeping Management Happy with Github

Talk about how managers often want to track progress and how Github
adapts to the various tools

===== Project Management Possibilities

Create an idea list here.

==== Infrastructure/Messaging

* Amazon Simple Notification Service (SNS) -
  http://www.activecollab.com/
* AMQP - http://www.amqp.org/
* Email

===== Github as a Gear in a Mighty Machine

Discuss some of the uses for Github as a source of messages.  How you
could use Github as a foundation for an asynchronous workflow.   

===== Messaging Possibilities

Create an idea list here.

==== Customer Support

* Apoio - http://www.apo.io/
* Zendesk

===== Github is for Customers?

Yes, yes it is.

===== Customer Service Possibilities

Create an idea list here.

==== Cloud and Platform-as-a-Service (PaaS)

* AppHarbor

===== Github is All Up in Your Cloud

If you use a PaaS service like EC2 or AppHarbor discuss how Github can
be integrated into your cloud deployment strategies.

===== Cloud Possibilities

Create an idea list here.

==== Task/Issue Management

* Asana - http://asana.com/
* BugHerd - http://www.bugherd.com/
* bug.ly - http://bug.ly/
* Bugzilla
* FogBugz
* Jira
* Trac
* Unfuddle - https://unfuddle.com/
* YouTrack - http://www.jetbrains.com/youtrack/index.jsp

===== Issue Management Possibilities

Users are looking for some guidance here.   Create an idea list that
will get people thinking...

==== Continuous Integration

* Bamboo - http://www.atlassian.com/software/bamboo/overview
* Jenkins (GitHub plugin)
* Jenkins (Git plugin)
* TeamCity
* Travis - https://travis-ci.org/

===== When this Code Changes, Build!

Discuss (briefly) the importance of CI systems and how a close
connection between SCM and CI systems is essential.   Reference other
O'Reilly books that cover CI.

===== Continuous Integration Possibilities

Users are looking for some guidance here.   Create an idea list that
will get people thinking...

==== Chat and Instant Messaging

* Amazon Simple Notification Service (SNS) -
  http://www.activecollab.com/
* Campfire
* IRC
* Jabber

===== Github us Just Another Member of Your Team

Talk about how having persistent chat room is how things get done, and
then talk about how a common pattern is to have Github sit in on your chatroom.

==== Social Networks and Microblogging

* buddycloud (Github plugin) - http://buddycloud.com/
* Boxcar - http://boxcar.io/
* Co-Op - http://coopapp.com/
* FriendFeed
* StatusNet - http://status.net/
* Twitter
* Yammer

===== Everyone's all a-twitter about Your Repositories

Talk about how Twitter is a popular way for people to discuss and
reference code.     Discuss the emergence of these internal
twitter-clones such as Yammer.  

Briefly touch upon the fact that there's only an arbitrary difference
between status and chat.

===== Possibilities for Twitter, FriendFeed, etc.

Create an idea list here.

==== Build Gamification

* Buildcoin - http://buildcoin.com/

===== Development as a Game

Well I certainly hope this doesn't catch on, but we should likely
explain it a bit.

===== Gamification Possibilities

Create an idea list here.

==== Infrastructure Monitoring

* CopperEgg - http://copperegg.com

==== Code Quality and Analysis

* CodeClimate - https://codeclimate.com/

==== Code Conversion

* CodePorting-C#2Java  - http://codeporting.com/

==== Documentation

* CoffeeDoc.info - http://coffeedoc.info/
* Weblate - http://weblate.org/en/
* WebTranslateIt - https://webtranslateit.com/

==== Telephony and Voice Systems

* Twilio - http://www.twilio.com/

==== TODO: Uncategorized

Tim: I'm going to categorize all of these.   This has been something
I've wanted to do for years now because I think it would be a valuable
asset.  If we could work this into the book and make this section a
sort of an "idea book" for how to integrate Github into your
infrastruction it will move inventory.    I've been looking for this
to help convince clients to adopt Github.





* Cube
* Ducksboard

* Fisheye
* Flowdock
* Freckle
* Gemini
* Gemnasium
* geocommit
* GetLocalization
* gitlive
* Grmble
* GroupTalent
* Grove
* Habitualist
* Hall
* Harvest
* HipChat
* Hostedgraphite
* Hubcap
* HubCI
* Humbug
* IceScrum
* Irker
* Jaconda
* Kanbanery
* Kickoff
* Lean-To
* Lighthouse
* Lingohub
* Loggly
* MantisBT
* Masterbranch
* MQTT publish
* Notify My Android
* Nodejitsu
* Notifo
* OnTime
* Pachube
* Packagist
* PivotalTracker
* Planbox
* Planio
* Presently
* Prowl
* PuppetLinter
* Pushover
* PythonPackages
* Railsbp
* RailsBrakeman
* Rally
* RationalTeamConcert
* Rdocinfo
* ReadTheDocs
* Redmine
* Rubyforge

* ShiningPanda
* Slatebox
* SnowyEvening
* Socialcast
* SoftLayerMessaging
* Sourcemint
* SplendidBacon
* Sprintly
* SqsQueue
* Stackmob
* Talker
* TargetProcess
* Tender
* TestPilot
* Toggl
* Trajectory


  





