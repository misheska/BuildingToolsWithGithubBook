CHAPTER 8: Android and the Git Data API


                           We’ve now implemented the login functionality.

                           We retrieve the username and password from our UI elements.


                           Our UI should notify the user that a login is occurring in a background task,
                           so we grab the status text element and update the text in it.


                           We then start the background thread process to do our login. This syntax

                           creates a new thread for us with the username and password as parameters.
                           Android will manage the lifecycle of this thread for us, meaning starting a
                           new thread, separate from the main UI thread.


                           Here we define the derived AsyncTask class. The three types in the generics

                           signature provide a way to parameterize our instantiated task; we need to
                           provide a username and password to the background task, and the first type
                           in the signature allows us to pass an array of Strings. You can see in the ac-

                           tual method definition that the ellipsis notation provides a way to parame-
                           terize a method with a variable number of arguments (called varargs). Inside

                           our defined method we expect we will send two Strings in, and we make
                           sure to do that in our call.


                           Once inside the  doInBackground()      function, we instantiate a UserSer-
                           vice  class, a wrapper around the GitHub API which interacts with the user

                           service API call. In order to access this information, we have to retrieve the
                           client for this service call and provide the client with the username and pass-

                           word credentials. This is the syntax to do that.


                           We wrap the call to getUser()    in a try block as the function signature can
                           throw an error (if the network were down, for example). We don’t really need
                           to retrieve information about the user using the User object, but this call

                           verifies that our username and password are correct and we store the result
                           of the call in our return value. GitHub will not use the credentials you set un-

                           til you make an API call, so we need to use our credentials to access some-
                           thing in order to verify those credentials work.


                           We renamed the    login()  function to more accurately reflect the fact that
                           when we call this, we are already logged into GitHub.


                           If our login was a failure, either because of network failure, or because our

                           credentials were incorrect, we indicate this in the status message. A user can
                           retry if they wish.






        180