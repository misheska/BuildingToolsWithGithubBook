CHAPTER 10: CoffeScript, Hubot and the Activities API


                                         res.reply "Thanks, you got it!"

                                         console.log "Accepted!"
                                decline = ( res ) ->
                                         res.reply "OK, I'll find someone else"
                                         console.log "Declined!"


                         This is a dense piece of code and can be confusing if you are new to Coffee-
                      Script. At the same time, hopefully you will agree this is amazingly powerful

                      code for such a small snippet after reading these notes.

                         All NodeJS modules work start by defining entrypoints using theexports

                         syntax. This code defines a function that expects a single parameter; when
                         the function is executed, the parameter will be called robot. The Hubot

                         framework will pass in a robot object for us that we will program further
                         down.


                         The Hubot API defines a method on the robot object calledrespond  which
                         we use here. It takes two parameters: a regular express to match against and

                         a function which receives an instance of the chat response object (cresed
                         here). The second line uses the API for this response object to call a method

                         accept  with the response object. We define accept in a moment.

                         We define another message expectation using the same respond syntax and

                         then call a method decline  . If someone saysprobot accept    orprobot
                         decline  in our chat room, these two calls will answer those statements.


                         Now we define the   accept  method. The accept method receives the re-

                         sponse object generated by the Hubot framework and calls thereply meth-
                         od which, you guessed it, sends a message back into the chat channel with

                         the text “Thanks, you got it!”.

                         The accept method then also calls console.log   with information that is

                         displayed on the console from which we started Probot. This is a simple way
                         for us to assure everything worked correctly; if we don’t see this message,

                         our code before this was broken. The  console.log   is not visible to any
                         users in the channel. It is good practice to remove this code when you final-
                         ize your production code, but if you forget, it won’tct anything happen-

                         ing in the channel.


                         We then define thedecline  method using the same APIs as for theaccept
                         method.






       248