CHAPTER 9: JavaScript and the Git Data API



                      Addendum: a NodeJS GitHub Authentication
                      Service


                      If you feel more comfortable using your own authentication server and not us-

                      ing the Firebase option presented above, this addendum to the chapter shows
                      you how to do this.

                         There are several libraries which offer support for oAuth authentication on
                      GitHub, but the consistency of NodeJS modules often leaves something to be
                      desired. As I was building this chapter I experimented with several authentica-

                      tion modules and quickly discovered even though that module might have
                      been the sanctioned and approved module last year, that it has already been

                      abandoned this year. There is a tendency to build software using the latest li-
                      braries as you might assume the newest library would have the fewest bugs. In
                      my experience, NodeJS libraries come with less test coverage than other lan-

                      guage libraries, and for this reason, often have more breaking changes than the
                      authors would care to admit. Another reason to build testable code.

                         The library I finally settled upon is called Passport, written by Stuart P.
                      Benchley, which supports a strategy calledpassport-github   written by Jared
                      Hanson. Both are open source and, of course, hosted on GitHub. We’ll write a

                      simple NodeJS server which allows login via GitHub, and then provides our sin-
                      gle page application with a token to use when talking to the GitHub API using

                      Github.js.


                      Our own NodeJS Application


                      Let’s build our app inside a directory calnode . Doing this will keep our code
                      separate from our client side code and prevent our karma test runner from

                      loading these files as part of test runs.
                         To build out NodeJS application we will first create the application package

                      manifest (node/package.json    ) which specifies the required pieces and allows
                      us to runnpm install   to download them all.


                         {
                              "name": "coffeetech-localauth",
                              "description": "Sample NodeJS for GitHub Auth",
                              "version": "0.0.1",
                              "homepage": "http://spa.coffeete.ch",

                              "repository": {
                                  "type": "git",
                                  "url": "git://github.com/xrd/spa.coffeete.ch.git"
                              },
                              "author": "Chris Dawson <xrdawson@gmail.com> (https://github.com/xrd/)",

                              "keywords": [



       228