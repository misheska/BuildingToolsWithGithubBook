[appendix]
== GitHub started with Ruby

Many of the tools written and used internally at GitHub are written in
Ruby. The founders of GitHub have all made strong contributions to popular
Ruby libraries, called "gems". To be successful with this book, you should
at least have Ruby installed. 

There are many ways to get Ruby but not all of them are created equal. 
As a long time user I have experienced the pain of using a pre-installed Ruby 
or one from a package manager, and generally these installation
methods provide a suboptimal experience. If you are not familiar with
Ruby, use this chapter to get through installation with the least
friction and trouble. 

You might already have a version of Ruby installed. Mac OSX comes
bundled with Ruby and various flavors of Linux do as well (or provide
a quick and easy installation through the built in package manager
like "apt-get"). However, I recommend that you use the method of
installation described below rather than using the stock installed
version of Ruby you might already have on your system. Often ruby
packages require a specific version of ruby though there 
is a chance it will work with other versions. The problem is that you
might encounter subtle bugs that have never been seen before and using
the methods described here will make it trivial to install any version
of Ruby that you need side by side with any other version. You can
guarantee you are using the correct version, and the method described
here will not interfere with any other previously installed version of
Ruby you have already on your system. 

=== Why Ruby at GitHub

GitHub is a company with its foundations sitting on top of the Ruby
language. Tom Preston Warner (one of three founders of GitHub) built
the initial libraries for using git 
with Ruby, a library called Grit. You can host blogs on GitHub for
free, and this tool called Jekyll is built using Ruby. Gollum, the
technology which powers GitHub wikis, is built using Grit and runs on
Ruby. 

To understand GitHub, it is best to understand a little bit of Ruby.
You can use many of the tools used at GitHub by simply installing Ruby,
and not knowing any Ruby syntax. This book will not require you to
code in Ruby, but will ask you to read through Ruby code. We write in
a literal, readable way, so that anyone with basic software developer
skills and mastery of the English language should be able to
understand the tools we are using. And, if you are someone
who previously never wanted to learn Ruby, who knows, perhaps after
reading these examples in Ruby you will learn to like it as a
language. Ruby is not a perfect language, but is a useful addition to
a developer's toolkit because of its focus on developer productivity.

=== Installing Ruby

To install Ruby, use RVM. RVM stands for Ruby Version Manager. RVM allows you to install
multiple versions of Ruby on your machine and have them interoperate
without conflict. You will probably only need to install a single
version of Ruby to use the examples in the book. And, RVM makes it so
that if you choose to install another version, you will not have to
reconfigure any applications that relied on the other versions
installed. 

Installation of Ruby using RVM depends on your operating system. If
you are using Mac OSX or Linux, your installation will probably be as
simple as running these commands from a shell:

[source,bash]
$ \curl -sSL https://get.rvm.io | bash -s stable

This will install RVM and Ruby.

If you are running Windows, you can use RVM to install Ruby, but your
instructions are a little more complicated. Refer to the documentation
to do so. A better option is to consider installing something like VirtualBox (a virtual
machine manager). If you do this, you can install RVM inside a Linux
Virtual Machine (VM). Windows is, sadly, a second class citizen with
Ruby and RVM and, for this reason, it is often better to install RVM
inside a host system like Linux which has a wider community around it
to support you. Virtual Box and Linux are free as in beer and as in
speech, so you can try them out without cost (other than your time).
There are many native gems for Ruby which don't properly compile if
the host system is Windows, so you can save yourself considerable time
by just using a completely free (as in beer) option like VirtualBox
and a Linux virtual machine running on Windows instead of fighting
with running everything directly on Windows. 

=== Important Ruby and RVM Concepts

Here are a few tips when using Ruby and RVM.

* `Gemfile`: Ruby packages libraries in a format called a gem. A
  gemfile is a manifest which describes which gems your application
  needs. Gemfiles make it simple to install all the required
  libraries: run the `bundle` command from a shell prompt and all
  libraries will be installed, which can include downloading from the
  network and building from source if compilation is required.
* `.ruby-version` or `.rvmrc`: These two files tell your application
  (or shell) which version of Ruby to use. Often applications will
  include this file as a part of their package. If you use RVM, RVM
  will either switch to that version of Ruby or prompt you to install
  that version. Imagine you have an
  application which only runs on Ruby 2.1.3. You can create a file
  called `.ruby-version` which contains the string `ruby-2.1.3` and
  when your application starts, it will automatically use that version
  of Ruby. There are other Ruby based tools (like the
  zero-configuration web server Pow) which are aware of files
  like .ruby-version and will properly use correct version of Ruby if
  they see this file.
* `config.ru`: This is a file used to run Ruby applications using
  Rack. Rack is a web server interface, compatible with many
  application servers. If you see a config.ru file, you can run this
  application with many different servers. These can be powerful front
  ends used in production on many large sites on the Internet, or they
  can be minimal servers used just on a single laptop; Rack makes it
  easy to setup a server. 

=== Potential problems installing Ruby.

* Missing system tools: If you are running Mac OSX, you need to
  install Xcode and the command line tools. If you are a software
  developer, you probably have these already installed. If not, review
  online documentation to install these. If you are running Linux, you
  might not have installed the compiler chain; you can install all the
  build tools you will ever need using this command: `sudo apt-get
  install build-essential`. This can take a while, but will ensure you
  have all the tools necessary for building RVM and any binary gems.
* Missing developer libraries: There are some libraries which support
  Ruby (readline support, as an example, which allows you to use
  command line history inside of an interactive Ruby shell) that are
  not always installed or available to the RVM tool. RVM has greatly
  improved in detecting the correct libraries, and there are often
  notes which tell you how to properly configure these libraries. Make
  sure to read the output printed to the screen as you install Ruby
  using RVM for special instructions specific to your platform.
