[[started-github]]
== Getting Started with Github

=== What is Github?

A (Very) Brief History of Github

==== Essential Features: What makes Github, Github?

* Team Management

* Code Review

* Public/Private Project Hosting

* Open Source Collaboration

=== Collaboration for Code

==== An SCM does not a community create

Traditional approaches to SCM are decoupled from communication.
Email, issues trackers, all of these are afterthoughts.  On Github,
communication and collaboration are part of the platform.

==== How to Scale Open Source

Refer to Torvalds initial response to CVS and Subversion.    The
problem with centralization is politics not people.

Remove Barriers to Participation

==== Encourage Forking

No one needs permission to scratch an itch.  In a scalable OSS effort
the ability to not only fork but to continue to incorporate changes is essential.

Sidebar: Is Forking "anti-community"?  Reference this idea from
Cathedral + Bazaar that forking is seen as a failure.  (It isn't,
times have changed.)

==== Provide a Platform for Code Review

There is still one distribution of Rails or Node, and an important
part of distributed development is how changes are evaluated and
incorporated into these projects.  Github provides a platform for pull
requests, responses, and code-level comments.

=== Github is for Open Source

The idea of this section is to present a list of important OSS
projects and make the case that Github has become the center of most
things interesting in the last decade.

Todo: Ask Edd Dumbhill for a list of important OSS Github repositories.

=== Collaboration for other creative endeavors

This section extends the previous.  Not only is Github starting to
drive code, it is started to expand into other areas: design, writing,
government, hardware, and data.

Others?  Music?

==== Github for Graphic Designers

Todo: Ask Rune Madsen for a list of important Github repositories for design.

==== Github for Writers

Todo: Ask Andrew Savikas and Keith Fahlgren for a list of important Github
repositories in publishing.

==== Github for Legislators

Todo: Ask Alex Howard and Carl Malamud for a list of important Github
repositories for Government "code".

==== Github for Makers (Hardware)

Todo: Ask Jake Spurlock (?) for some repositories important for Makers.

==== Github for Data

Todo: Ask Julie Steele for a list of important Github repositories in
the data space.

=== Can you Git without Github?

Sure you can.  Just so that people don't call us unfair, here are some alternatives:

==== Hosted Git Services

* Gitorious (https://gitorious.org/)
* Bitbucket (https://bitbucket.org/)

==== On-premise Git

* Github Enterprise (https://enterprise.github.com/)
* GitlabHQ (http://gitlabhq.com/)
* Gitorious (https://gitorious.org/)
* Gitblit (http://gitblit.com/)

==== Using Github with other SCMs

Remember, Github is distributed, even if you standardize on another
SCM, you can still use Git.

* Git as a Local SCM
* Synchronizing to a Git Repository

Casestudy: The Apache Software Foundation doesn't use Github, but you
can easily fork and make pull requests via a set of repositories the
ASF pushes to Github

Briefly talk about the SVN-Git bridge, but don't dwell on it.
